@model SayOnlinePanel.Web.ViewModels.Surveys.CreateSurveyInputModel
@{ this.ViewData["Title"] = "Add new survey"; }
<form method="post">

    @*<form method="post" class="col-md-6 offset-md-3">*@
    <h1>@this.ViewData["Title"]</h1>
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control" rows="5"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" class="form-control" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="EndDate"></label>
        <input asp-for="EndDate" class="form-control" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PointsStart"></label>
        <input asp-for="PointsStart" class="form-control" />
        <span asp-validation-for="PointsStart" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PointsTotal"></label>
        <input asp-for="PointsTotal" class="form-control" />
        <span asp-validation-for="PointsTotal" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="SampleTotal"></label>
        <input asp-for="SampleTotal" class="form-control" />
        <span asp-validation-for="SampleTotal" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="SampleFemale"></label>
        <input asp-for="SampleFemale" class="form-control" />
        <span asp-validation-for="SampleFemale" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="SampleMale"></label>
        <input asp-for="SampleMale" class="form-control" />
        <span asp-validation-for="SampleMale" class="text-danger"></span>
    </div>

    <div id="QuestionsContainer" class="form-group">
        <div id="QuestionsContainer" class="form-group">
            <label asp-for="Questions"></label>
            <a id="addQ" class="btn btn-outline-secondary">Add Question</a>
            <div id="Q" class="form-group"></div>
        </div>
    </div>

    <input type="submit" class="btn btn-primary" />
</form>

<hr />
<p>&nbsp;</p>



@section Scripts {
    <script>
        let btnQ = document.querySelector("#addQ");
        let divQ = document.querySelector("#Q");
        btnQ.addEventListener("click", AddQuestion);
        let questionIndex = 0;
        function AddQuestion() {
            this.remove();
            let p = createHTMLElement("p", `${questionIndex + 1}`);
            let divQname = createHTMLElement("div");
            let nameQ = createHTMLElement("input", null, "form-control", [{ k: "placeholder", v: "Question description" }]);
            nameQ.name = `Questions[${questionIndex}].Name`;
            divQname.appendChild(nameQ);

            let divQType = createHTMLElement("div");
            let typeQ = createHTMLElement("select", null, null, [{ k: "placeholder", v: "Question type" }]);
            //let typeQ = createHTMLElement("select", null, "form-control");
            let options = ["SingleAnswer", "MultipleAnswer", "LikertScales", "Quantitative", "Dichotomous", "OpenEnded"] //, "ImageQuestion", "ImageChoiceAnswer"];


            for (let index = 0; index < options.length; index++) {
                let opt = options[index];
                let el = document.createElement('option');
                el.textContent = String(opt);
                el.value = String(opt);
                typeQ.appendChild(el);

            }


            typeQ.name = `Questions[${questionIndex}].QuestionType`;
            typeQ.addEventListener('change', (event) => {
                if (typeQ.value == "ImageQuestion") {
                    let imageInput = createHTMLElement("input", null, "form-control-file", [{ k: "placeholder", v: "Add image for question" }]);
                    imageInput.type = "file";
                    imageInput.setAttribute("id", "File1");
                    divQType.appendChild(imageInput);

                    let btnF = createHTMLElement("button");
                    btnF.setAttribute("id", "Button1");
                    //btnF.value = "Upload"
                    divQType.appendChild(btnF);
                    //imageInput.name = `Questions[${questionIndex - 1}].Image`;
                    //$('#Button1').click(function () {
                    //    var fileInput = document.getElementById('File1');
                    //    var file = fileInput.files[0];
                    //    var formData = new FormData();
                    //    formData.append(`Questions[${questionIndex - 1}].Image`, file);

                    //    $.ajax('/Surveys/Create', {
                    //        method: "POST",
                    //        processData: false,
                    //        contentType: false,
                    //        data: formData
                    //    }).done(function (data) { console.log(data); });

                    //});
                }
            });

            divQType.appendChild(typeQ);

            let AddABtn = createHTMLElement("a", "Add Answer", "btn");
            AddABtn.classList.add('btn-outline-success');
            let divA = document.createElement('div');
            divQ.appendChild(p);
            divQ.appendChild(divQname);
            divQ.appendChild(divQType);
            divQ.appendChild(AddABtn);
            divQ.appendChild(divA);
            let answerIndex = 0;

            AddABtn.addEventListener("click", () => {
                // if(typeQ.value == "ImageChoiceAnswer"){
                // let imageInputAnswer = createHTMLElement("input", null, "form-control-file", [{ k: "placeholder", v: "Add image for answer"}]);
                // imageInputAnswer.name = `Questions[${questionIndex - 1}].Answers[${answerIndex}].Name`;
                // divA.appendChild(imageInputAnswer);
                //}
                let nameA = createHTMLElement("input", null, "form-control", [{ k: "placeholder", v: "Answer description" }]);
                //nameA.name = `Answers[${answerIndex}].Name`;
                nameA.name = `Questions[${questionIndex - 1}].Answers[${answerIndex}].Name`;

                divA.appendChild(nameA);
                let divQbtn = document.createElement('div');
                divQbtn.appendChild(btnQ);
                divA.appendChild(divQbtn);

                answerIndex++;
            })
            questionIndex++;
        }

        function createHTMLElement(tagName, textContent, className, attributes, event) {
            let elm = document.createElement(tagName);
            if (className) {
                elm.classList.add(className);
            }
            if (textContent) {
                elm.textContent = textContent;
            }
            if (attributes) {
                attributes.forEach((a) => elm.setAttribute(a.k, a.v));
            }
            if (event) {
                elm.addEventListener(event.name, event.func)
            }
            return elm;
        }
    </script>
}
